#include "tasks.h"

/*	Task 04. The Least Common Multiple II [наименьшее общее кратное, НОК]
*
*	Даны три натуральных числа. Необходимо найти наименьшее общее кратное
*	данных чисел. Если данные некорректны, т.е. меньше единицы,
*	то должен быть возвращён ноль.
*
*	Примечание
*	Наименьшим общим кратным (НОК) чисел 21, 28 и 42 называется
*	наименьшее число, которое делится на 21, на 28 и на 42 без остатка.
*	Следовательно, это число 84.
*
*	Формат входных данных [input]
*	На вход функция принимает три целых числа типа int.
*
*	Формат выходных данных [output]
*	Функция должна возвратить целое число, которое является решением задания.
*
*	[ input 1]: 21 28 42
*	[output 1]: 84
*
*	[ input 2]: 18 12 36
*	[output 2]: 36
*
*	[ input 3]: 24 36 12
*	[output 3]: 72
*
*	[ input 4]: 5 13 2
*	[output 4]: 130
*
*	[ input 5]: 1 1 1
*	[output 5]: 1
*
*	[ input 6]: -1 1 1
*	[output 6]: 0
*/

int task04(int a, int b, int c) {
    if (a <= 0 || b <= 0 || c <= 0) { return 0; }
    int m = a, n = b;
    if (m < n) {
        swap(m, n);
    }
    while (m % n != 0) {
        m = m % n;
        swap(m, n);
    }
    int nok1 = (a * b) / n;
    m = nok1, n = c;
    if (m < n) {
        swap(m, n);
    }
    while (m % n != 0) {
        m = m % n;
        swap(m, n);
    }
    return (nok1 * c) / n;
}